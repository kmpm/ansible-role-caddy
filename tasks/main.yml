---
# tasks file for caddy
- name: Print Architecture
  debug: 
    msg: 
      - "Architecture:               {{ ansible_architecture }}"
      - "Distribution:               {{ ansible_distribution }}"
      - "Distribution Version:       {{ ansible_distribution_version }}"
      - "Distribution Major Version: {{ ansible_distribution_major_version }}"
      - "OS Family:                  {{ ansible_os_family }}"

- name: Gather variables for each architecture
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_architecture | lower }}.yml"


- name: Create directory for ansible custom facts
  ansible.builtin.file:
    state: directory
    path: /etc/ansible/facts.d
    mode: '0755'

- name: default caddy.fact
  copy:
    src: caddy.fact
    dest: /etc/ansible/facts.d/caddy.fact
    force: no
    mode: 0644
  notify:
    - reload ansible_local

- name: "reload ansible_local"
  setup:
    filter: "ansible_local"

- name: show versions
  debug:
    msg:
    - "caddy got {{ ansible_local['caddy']['current']['version'] }}, wants {{ caddy_version }} "
    - "xcaddy got {{ ansible_local['caddy']['current']['xcaddy_version'] }}, wants {{ xcaddy_version }} "
    - "xcaddy_with got '{{ ansible_local['caddy']['current']['xcaddy_with'] }}'"
    - "change /etc/ansible/facts.d/caddy.fact if current versions isn't correct"

- name: "create group '{{ caddy_group }}' for caddy"
  ansible.builtin.group:
    system: yes
    name: "{{ caddy_group }}"

- name: "create user '{{ caddy_user }}' for caddy "
  ansible.builtin.user:
    name: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    home: /var/lib/caddy
    shell: /bin/false
    system: yes

- name: create folders
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ caddy_tools_folder }}"
    - "{{ caddy_build_folder }}"


- name: custom caddy
  include_tasks: custom-caddy.yml
  when: xcaddy_with is defined and (xcaddy_with|length>0)

- name: default caddy
  include_tasks: default-caddy.yml
  when: xcaddy_with is not defined or (xcaddy_with|length==0)

- name: create folders for caddy runtime
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
  loop:
    - /etc/caddy
    - /var/lib/caddy

- name: configure caddy service
  template:
    src: caddy.service.j2
    dest: /etc/systemd/system/caddy.service
    mode: '0644'
  register: caddy_service

- name: configure caddyfile
  template:
    src: caddyfile.j2
    dest: /etc/caddy/Caddyfile
    mode: '0644'
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
  register: caddy_config

- name: make sure caddy has access to all it's files
  file:
    dest: "{{ item }}"
    recurse: yes
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
  loop:
    - /etc/caddy
    - /var/lib/caddy
  
- name: make sure caddy is (re)started and enabled
  debug: msg="enable and restart caddy"
  notify: restart caddy
  when: caddy_service.changed or caddy_config.changed
  tags: molecule-notest

- name: check started
  systemd:
    name: caddy
    state: started
    enabled: yes
    daemon_reload: true
  tags: molecule-notest